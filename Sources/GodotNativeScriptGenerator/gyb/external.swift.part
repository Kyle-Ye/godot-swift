import GodotNative

/// plugin GodotNativeScript 
///     Swift language support for the Godot game engine. 
/// 
///     *Godot Swift* is a [Swift Package Manager](https://swift.org/package-manager/) 
///     plugin that builds and packages Swift frameworks as Godot native libraries.
/// 
///     > important:
///     For Godot to be able to load a Swift framework, it must be compiled as 
///     a dynamic library. You can use the 
///     [`dynamic`](https://developer.apple.com/documentation/swift_packages/product/library/librarytype/dynamic) 
///     option make the Swift Package Manager compile a dynamic library product.
///
///     To use *Godot Swift* in a project, add it as a dependency in `Package.swift`, 
///     and add the `GodotNative` module and the `GodotNativeScript` plugin to 
///     your build target.
/**
        ```swift
        .library(name: "example", type: .dynamic, targets: ["GodotSwiftExample"])
        ```
**/
/**
        ```swift
        .package(url: "https://github.com/kelvin13/godot-swift", .exact("0.1.0")) 
        ```
**/
/**
        ```swift
        .target(name: "GodotSwiftExample", 
            dependencies: 
            [
                .product(name: "GodotNative",       package: "godot-swift"),
            ], 
            plugins: 
            [
                .plugin(name:  "GodotNativeScript", package: "godot-swift"),
            ])
        ```
**/
///     > note:
///     Do not actually import `GodotNative` or `GodotNativeScript` in your project. 
///     All code generated by this plugin is emitted inline into your Swift module.
/// 
///     To minimize namespace pollution, most *Godot Swift* symbols are scoped 
///     under the [`Godot`] namespace. The symbols listed on this page are the 
///     only (non-underscored) symbols emitted into the top-level scope of 
///     your Swift module.
/// #   [Getting started](getting-started)
/// #   [Namespaces](godot-toplevel-namespaces)
/// #   [Binding operators](binding-operators, signal-binding-operators)
/// #   [Math types](math-types)
/// #   [Math protocols](math-protocols)

/// enum Godot 
///     A namespace for Godot-related functionality.
/// #   [Namespaces](godot-toplevel-namespaces, godot-namespaces)
/// #   [Defining libraries](godot-library-usage)
/// #   [Defining nativescripts](godot-nativescript-usage, godot-nativescript-interface-usage)
/// #   [Defining signals](godot-signal-usage)
/// #   [Working with variants](godot-variant-usage)
/// #   [Core types](godot-core-types)
/// #   [Generic abstractions](godot-generic-abstractions)
/// #   [Generic unifications](godot-generic-unification-protocols)
/// #   [Error handling](godot-error)
/// #   [Global constants](godot-global-constants)
/// #   (0:godot-toplevel-namespaces)
public 
enum Godot
{
}

@_cdecl("godot_gdnative_init")
public 
func godot_gdnative_init(options:UnsafePointer<godot_gdnative_init_options>)
{
    Godot.initialize(api: options.pointee.api_struct.pointee)
}

@_cdecl("godot_nativescript_init")
public 
func godot_nativescript_init(handle:UnsafeMutableRawPointer) 
{
    Godot.Library.wrap(handle: handle).initialize()
}
@_cdecl("godot_nativescript_terminate")
public 
func godot_nativescript_terminate(handle:UnsafeMutableRawPointer) 
{
    Godot.Library.wrap(handle: handle).deinitialize()
}

@_cdecl("godot_gdnative_terminate")
public 
func godot_gdnative_terminate(options _:UnsafePointer<godot_gdnative_terminate_options>)
{
    Godot.deinitialize()
}
