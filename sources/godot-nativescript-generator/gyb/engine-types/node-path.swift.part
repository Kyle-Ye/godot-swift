extension Godot 
{
    /// class Godot.NodePath
    /// :   Godot.Variant 
    /// final 
    ///     A pre-parsed scene tree path.
    /// 
    ///     This type corresponds to the 
    ///     [`Godot::NodePath`](https://docs.godotengine.org/en/stable/classes/class_nodepath.html) 
    ///     type in GDScript.
    ///
    ///     Create a [`NodePath`] instance from a string using the [`init(parsing:)`] 
    ///     initializer.
    /** 
            ```swift 
            let string:Swift.String = ...
            let path:Godot.NodePath = .init(parsing: string)
            ```
    **/
    ///     Instances of [`NodePath`] are memory-managed by Swift.
    /// #   [Creating a node path](node-path-initializer-usage)
    /// #   (-3:godot-core-types)
    /// #   (-3:)
    final 
    class NodePath 
    {
        private 
        var core:godot_node_path
        
        fileprivate 
        init(retained core:godot_node_path) 
        {
            self.core = core
        }
        
        private 
        init(with initializer:(UnsafeMutablePointer<godot_node_path>) -> ()) 
        {
            self.core = .init(with: initializer)
        }
        
        deinit 
        {
            self.core.deinit()
        }
    }
}
extension Godot.NodePath
{
    /// convenience init Godot.NodePath.init(parsing:)
    ///     Creates a node path by parsing the given string. 
    /// - string:Swift.String 
    ///     A node path string. Passing an ill-formed node path string is an error.
    /// #   (node-path-initializer-usage)
    convenience
    init(parsing string:Swift.String)
    {
        var string:godot_string = .init(packing: string)
        self.init
        {
            (data:UnsafeMutablePointer<godot_node_path>) in 
            withUnsafePointer(to: string)
            {
                Godot.api.1.0.godot_node_path_new(data, $0)
            }
        }
        string.deinit()
    }
}
